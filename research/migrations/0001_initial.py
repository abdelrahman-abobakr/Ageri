# Generated by Django 4.2.7 on 2025-07-01 21:00

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import research.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Publication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=500)),
                ("abstract", models.TextField(blank=True, max_length=2000)),
                (
                    "publication_type",
                    models.CharField(
                        choices=[
                            ("journal_article", "Journal Article"),
                            ("conference_paper", "Conference Paper"),
                            ("book_chapter", "Book Chapter"),
                            ("book", "Book"),
                            ("thesis", "Thesis"),
                            ("report", "Report"),
                            ("preprint", "Preprint"),
                            ("other", "Other"),
                        ],
                        default="journal_article",
                        max_length=20,
                    ),
                ),
                ("journal_name", models.CharField(blank=True, max_length=300)),
                ("conference_name", models.CharField(blank=True, max_length=300)),
                ("publisher", models.CharField(blank=True, max_length=200)),
                ("volume", models.CharField(blank=True, max_length=50)),
                ("issue", models.CharField(blank=True, max_length=50)),
                (
                    "pages",
                    models.CharField(
                        blank=True, help_text="e.g., 123-145", max_length=50
                    ),
                ),
                ("publication_date", models.DateField(blank=True, null=True)),
                (
                    "doi",
                    models.CharField(
                        blank=True,
                        help_text="Digital Object Identifier",
                        max_length=200,
                    ),
                ),
                (
                    "isbn",
                    models.CharField(
                        blank=True,
                        help_text="International Standard Book Number",
                        max_length=20,
                    ),
                ),
                (
                    "issn",
                    models.CharField(
                        blank=True,
                        help_text="International Standard Serial Number",
                        max_length=20,
                    ),
                ),
                (
                    "pmid",
                    models.CharField(blank=True, help_text="PubMed ID", max_length=20),
                ),
                ("url", models.URLField(blank=True, help_text="Link to publication")),
                (
                    "pdf_url",
                    models.URLField(blank=True, help_text="Direct link to PDF"),
                ),
                (
                    "document_file",
                    models.FileField(
                        blank=True,
                        help_text="Upload publication document (PDF, DOC, DOCX only)",
                        upload_to=research.models.upload_to_publications,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["pdf", "doc", "docx"]
                            )
                        ],
                    ),
                ),
                (
                    "keywords",
                    models.TextField(blank=True, help_text="Comma-separated keywords"),
                ),
                ("research_area", models.CharField(blank=True, max_length=200)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("draft", "Draft"),
                            ("published", "Published"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "review_notes",
                    models.TextField(
                        blank=True, help_text="Admin notes about the review"
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, help_text="Make publication visible to public"
                    ),
                ),
                ("citation_count", models.PositiveIntegerField(default=0)),
            ],
            options={
                "verbose_name": "Publication",
                "verbose_name_plural": "Publications",
                "ordering": ["-publication_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PublicationMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("download_count", models.PositiveIntegerField(default=0)),
                ("citation_count", models.PositiveIntegerField(default=0)),
                ("altmetric_score", models.FloatField(blank=True, null=True)),
                ("twitter_mentions", models.PositiveIntegerField(default=0)),
                ("facebook_shares", models.PositiveIntegerField(default=0)),
                ("linkedin_shares", models.PositiveIntegerField(default=0)),
                ("mendeley_readers", models.PositiveIntegerField(default=0)),
                ("researchgate_reads", models.PositiveIntegerField(default=0)),
                ("last_citation_update", models.DateTimeField(blank=True, null=True)),
                ("last_altmetric_update", models.DateTimeField(blank=True, null=True)),
                (
                    "publication",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metrics",
                        to="research.publication",
                    ),
                ),
            ],
            options={
                "verbose_name": "Publication Metrics",
                "verbose_name_plural": "Publication Metrics",
            },
        ),
        migrations.CreateModel(
            name="PublicationAuthor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Order of author in publication (1 = first author)",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        blank=True,
                        help_text="Author's role in the research (e.g., Principal Investigator, Data Analyst)",
                        max_length=100,
                    ),
                ),
                (
                    "affiliation_at_publication",
                    models.CharField(
                        blank=True,
                        help_text="Author's affiliation when this publication was created",
                        max_length=300,
                    ),
                ),
                (
                    "contribution",
                    models.TextField(
                        blank=True,
                        help_text="Description of author's contribution to the research",
                    ),
                ),
                (
                    "is_corresponding",
                    models.BooleanField(
                        default=False,
                        help_text="Is this author the corresponding author?",
                    ),
                ),
                (
                    "is_first_author",
                    models.BooleanField(
                        default=False, help_text="Is this the first author?"
                    ),
                ),
                (
                    "is_last_author",
                    models.BooleanField(
                        default=False, help_text="Is this the last/senior author?"
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="publication_assignments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "publication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="author_assignments",
                        to="research.publication",
                    ),
                ),
            ],
            options={
                "verbose_name": "Publication Author",
                "verbose_name_plural": "Publication Authors",
                "ordering": ["publication", "order"],
            },
        ),
        migrations.AddField(
            model_name="publication",
            name="authors",
            field=models.ManyToManyField(
                help_text="Researchers who authored this publication",
                related_name="publications",
                through="research.PublicationAuthor",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="publication",
            name="corresponding_author",
            field=models.ForeignKey(
                blank=True,
                help_text="Main contact author for this publication",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="corresponding_publications",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="publication",
            name="reviewed_by",
            field=models.ForeignKey(
                blank=True,
                help_text="Admin who reviewed this publication",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="reviewed_publications",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="publication",
            name="submitted_by",
            field=models.ForeignKey(
                help_text="User who submitted this publication",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="submitted_publications",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddIndex(
            model_name="publicationauthor",
            index=models.Index(
                fields=["publication", "order"], name="research_pu_publica_dc3a1f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="publicationauthor",
            index=models.Index(
                fields=["author"], name="research_pu_author__cfe3b1_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="publicationauthor",
            unique_together={("publication", "author")},
        ),
        migrations.AddIndex(
            model_name="publication",
            index=models.Index(fields=["status"], name="research_pu_status_d46478_idx"),
        ),
        migrations.AddIndex(
            model_name="publication",
            index=models.Index(
                fields=["publication_type"], name="research_pu_publica_abbf3f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="publication",
            index=models.Index(
                fields=["publication_date"], name="research_pu_publica_25e319_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="publication",
            index=models.Index(
                fields=["submitted_at"], name="research_pu_submitt_0eef6d_idx"
            ),
        ),
    ]
