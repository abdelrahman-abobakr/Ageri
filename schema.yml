openapi: 3.0.3
info:
  title: Research Platform API
  version: 1.0.0
  description: API for Scientific Research Organization Platform
paths:
  /api/auth/login/:
    post:
      operationId: auth_login_create
      description: User login endpoint - returns JWT tokens
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/profiles/{id}/:
    get:
      operationId: auth_profiles_retrieve
      description: Retrieve and update user profile
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: auth_profiles_update
      description: Retrieve and update user profile
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: auth_profiles_partial_update
      description: Retrieve and update user profile
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/auth/profiles/me/:
    get:
      operationId: auth_profiles_me_retrieve
      description: Retrieve and update user profile
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: auth_profiles_me_update
      description: Retrieve and update user profile
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: auth_profiles_me_partial_update
      description: Retrieve and update user profile
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/auth/register/:
    post:
      operationId: auth_register_create
      description: User registration endpoint - creates new researcher accounts
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /api/auth/token/refresh/:
    post:
      operationId: auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/users/:
    get:
      operationId: auth_users_list
      description: List all users - admin only
      parameters:
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_approved
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: role
        schema:
          type: string
          enum:
          - admin
          - moderator
          - researcher
        description: |-
          * `admin` - Admin
          * `moderator` - Moderator
          * `researcher` - Researcher
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserListList'
          description: ''
  /api/auth/users/{id}/:
    get:
      operationId: auth_users_retrieve
      description: Retrieve and update user details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_update
      description: Retrieve and update user details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_partial_update
      description: Retrieve and update user details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/auth/users/{id}/approve/:
    put:
      operationId: auth_users_approve_update
      description: Approve or reject user registration - admin only
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserApproval'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserApproval'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserApproval'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApproval'
          description: ''
    patch:
      operationId: auth_users_approve_partial_update
      description: Approve or reject user registration - admin only
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserApproval'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserApproval'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserApproval'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApproval'
          description: ''
  /api/auth/users/me/:
    get:
      operationId: auth_users_me_retrieve
      description: Retrieve and update user details
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_me_update
      description: Retrieve and update user details
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_me_partial_update
      description: Retrieve and update user details
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/auth/users/pending/:
    get:
      operationId: auth_users_pending_list
      description: List users pending approval - admin only
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserListList'
          description: ''
  /api/content/announcements/:
    get:
      operationId: content_announcements_list
      description: ViewSet for managing announcements
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - content
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnnouncementListList'
          description: ''
    post:
      operationId: content_announcements_create
      description: ViewSet for managing announcements
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnouncementCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnouncementCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnouncementCreateUpdate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementCreateUpdate'
          description: ''
  /api/content/announcements/{id}/:
    get:
      operationId: content_announcements_retrieve
      description: Retrieve announcement and increment view count
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - content
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementDetail'
          description: ''
    put:
      operationId: content_announcements_update
      description: ViewSet for managing announcements
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnouncementCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnouncementCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnouncementCreateUpdate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementCreateUpdate'
          description: ''
    patch:
      operationId: content_announcements_partial_update
      description: ViewSet for managing announcements
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnnouncementCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnnouncementCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnnouncementCreateUpdate'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementCreateUpdate'
          description: ''
    delete:
      operationId: content_announcements_destroy
      description: ViewSet for managing announcements
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - content
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/content/announcements/{id}/approve/:
    post:
      operationId: content_announcements_approve_create
      description: Approve or reject an announcement
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnouncementApproval'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnouncementApproval'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnouncementApproval'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementApproval'
          description: ''
  /api/content/announcements/featured/:
    get:
      operationId: content_announcements_featured_retrieve
      description: Get featured announcements
      tags:
      - content
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementDetail'
          description: ''
  /api/content/announcements/my_announcements/:
    get:
      operationId: content_announcements_my_announcements_retrieve
      description: Get current user's announcements
      tags:
      - content
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementDetail'
          description: ''
  /api/content/announcements/pending_review/:
    get:
      operationId: content_announcements_pending_review_retrieve
      description: Get announcements pending review (admin only)
      tags:
      - content
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementDetail'
          description: ''
  /api/content/announcements/pinned/:
    get:
      operationId: content_announcements_pinned_retrieve
      description: Get pinned announcements
      tags:
      - content
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementDetail'
          description: ''
  /api/content/comments/:
    get:
      operationId: content_comments_list
      description: ViewSet for managing comments
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - content
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCommentList'
          description: ''
    post:
      operationId: content_comments_create
      description: ViewSet for managing comments
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommentCreate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentCreate'
          description: ''
  /api/content/comments/{id}/:
    get:
      operationId: content_comments_retrieve
      description: ViewSet for managing comments
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - content
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    put:
      operationId: content_comments_update
      description: ViewSet for managing comments
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommentCreate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentCreate'
          description: ''
    patch:
      operationId: content_comments_partial_update
      description: ViewSet for managing comments
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCommentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCommentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCommentCreate'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentCreate'
          description: ''
    delete:
      operationId: content_comments_destroy
      description: ViewSet for managing comments
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - content
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/content/comments/{id}/approve/:
    post:
      operationId: content_comments_approve_create
      description: Approve a comment
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api/content/comments/{id}/like/:
    post:
      operationId: content_comments_like_create
      description: Like a comment
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api/content/comments/{id}/reject/:
    post:
      operationId: content_comments_reject_create
      description: Reject a comment
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api/content/comments/{id}/unlike/:
    post:
      operationId: content_comments_unlike_create
      description: Unlike a comment
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api/content/posts/:
    get:
      operationId: content_posts_list
      description: ViewSet for managing posts
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - content
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPostListList'
          description: ''
    post:
      operationId: content_posts_create
      description: ViewSet for managing posts
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostCreateUpdate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCreateUpdate'
          description: ''
  /api/content/posts/{id}/:
    get:
      operationId: content_posts_retrieve
      description: Retrieve post and increment view count
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - content
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDetail'
          description: ''
    put:
      operationId: content_posts_update
      description: ViewSet for managing posts
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostCreateUpdate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCreateUpdate'
          description: ''
    patch:
      operationId: content_posts_partial_update
      description: ViewSet for managing posts
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPostCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPostCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPostCreateUpdate'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCreateUpdate'
          description: ''
    delete:
      operationId: content_posts_destroy
      description: ViewSet for managing posts
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - content
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/content/posts/{id}/approve/:
    post:
      operationId: content_posts_approve_create
      description: Approve or reject a post
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostApproval'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostApproval'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostApproval'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostApproval'
          description: ''
  /api/content/posts/events/:
    get:
      operationId: content_posts_events_retrieve
      description: Get event posts
      tags:
      - content
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDetail'
          description: ''
  /api/content/posts/featured/:
    get:
      operationId: content_posts_featured_retrieve
      description: Get featured posts
      tags:
      - content
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDetail'
          description: ''
  /api/content/posts/my_posts/:
    get:
      operationId: content_posts_my_posts_retrieve
      description: Get current user's posts
      tags:
      - content
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDetail'
          description: ''
  /api/content/posts/pending_review/:
    get:
      operationId: content_posts_pending_review_retrieve
      description: Get posts pending review (admin only)
      tags:
      - content
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDetail'
          description: ''
  /api/content/posts/upcoming_events/:
    get:
      operationId: content_posts_upcoming_events_retrieve
      description: Get upcoming events
      tags:
      - content
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDetail'
          description: ''
  /api/organization/assignments/:
    get:
      operationId: organization_assignments_list
      description: List all researcher assignments or create a new assignment
      parameters:
      - in: query
        name: department
        schema:
          type: integer
      - in: query
        name: lab
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: researcher
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - approved
          - draft
          - inactive
          - pending
          - published
          - rejected
        description: |-
          * `pending` - Pending
          * `approved` - Approved
          * `rejected` - Rejected
          * `active` - Active
          * `inactive` - Inactive
          * `draft` - Draft
          * `published` - Published
      tags:
      - organization
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResearcherAssignmentListList'
          description: ''
    post:
      operationId: organization_assignments_create
      description: List all researcher assignments or create a new assignment
      tags:
      - organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResearcherAssignment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResearcherAssignment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResearcherAssignment'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResearcherAssignment'
          description: ''
  /api/organization/assignments/{id}/:
    get:
      operationId: organization_assignments_retrieve
      description: Retrieve, update or delete a researcher assignment
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - organization
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResearcherAssignment'
          description: ''
    put:
      operationId: organization_assignments_update
      description: Retrieve, update or delete a researcher assignment
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResearcherAssignment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResearcherAssignment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResearcherAssignment'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResearcherAssignment'
          description: ''
    patch:
      operationId: organization_assignments_partial_update
      description: Retrieve, update or delete a researcher assignment
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedResearcherAssignment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedResearcherAssignment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedResearcherAssignment'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResearcherAssignment'
          description: ''
    delete:
      operationId: organization_assignments_destroy
      description: Retrieve, update or delete a researcher assignment
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - organization
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/organization/assignments/my/:
    get:
      operationId: organization_assignments_my_list
      description: List current user's lab assignments
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - organization
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResearcherAssignmentListList'
          description: ''
  /api/organization/departments/:
    get:
      operationId: organization_departments_list
      description: List all departments or create a new department
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - approved
          - draft
          - inactive
          - pending
          - published
          - rejected
        description: |-
          * `pending` - Pending
          * `approved` - Approved
          * `rejected` - Rejected
          * `active` - Active
          * `inactive` - Inactive
          * `draft` - Draft
          * `published` - Published
      tags:
      - organization
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDepartmentListList'
          description: ''
    post:
      operationId: organization_departments_create
      description: List all departments or create a new department
      tags:
      - organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
  /api/organization/departments/{department_id}/labs/:
    get:
      operationId: organization_departments_labs_list
      description: List labs by department
      parameters:
      - in: path
        name: department_id
        schema:
          type: integer
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - organization
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLabListList'
          description: ''
  /api/organization/departments/{id}/:
    get:
      operationId: organization_departments_retrieve
      description: Retrieve, update or delete a department
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - organization
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    put:
      operationId: organization_departments_update
      description: Retrieve, update or delete a department
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Department'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    patch:
      operationId: organization_departments_partial_update
      description: Retrieve, update or delete a department
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDepartment'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
          description: ''
    delete:
      operationId: organization_departments_destroy
      description: Retrieve, update or delete a department
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - organization
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/organization/labs/:
    get:
      operationId: organization_labs_list
      description: List all labs or create a new lab
      parameters:
      - in: query
        name: department
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - approved
          - draft
          - inactive
          - pending
          - published
          - rejected
        description: |-
          * `pending` - Pending
          * `approved` - Approved
          * `rejected` - Rejected
          * `active` - Active
          * `inactive` - Inactive
          * `draft` - Draft
          * `published` - Published
      tags:
      - organization
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLabListList'
          description: ''
    post:
      operationId: organization_labs_create
      description: List all labs or create a new lab
      tags:
      - organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lab'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lab'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lab'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
          description: ''
  /api/organization/labs/{lab_id}/availability/:
    get:
      operationId: organization_labs_availability_retrieve
      description: Check lab availability and capacity
      parameters:
      - in: path
        name: lab_id
        schema:
          type: integer
        required: true
      tags:
      - organization
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/organization/labs/{id}/:
    get:
      operationId: organization_labs_retrieve
      description: Retrieve, update or delete a lab
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - organization
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
          description: ''
    put:
      operationId: organization_labs_update
      description: Retrieve, update or delete a lab
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lab'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lab'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lab'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
          description: ''
    patch:
      operationId: organization_labs_partial_update
      description: Retrieve, update or delete a lab
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLab'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLab'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLab'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
          description: ''
    delete:
      operationId: organization_labs_destroy
      description: Retrieve, update or delete a lab
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - organization
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/organization/stats/:
    get:
      operationId: organization_stats_retrieve
      description: Get organization statistics
      tags:
      - organization
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/research/authors/:
    get:
      operationId: research_authors_list
      description: ViewSet for managing publication authors
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - research
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPublicationAuthorList'
          description: ''
    post:
      operationId: research_authors_create
      description: ViewSet for managing publication authors
      tags:
      - research
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicationAuthor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicationAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicationAuthor'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationAuthor'
          description: ''
  /api/research/authors/{id}/:
    get:
      operationId: research_authors_retrieve
      description: ViewSet for managing publication authors
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - research
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationAuthor'
          description: ''
    put:
      operationId: research_authors_update
      description: ViewSet for managing publication authors
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - research
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicationAuthor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicationAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicationAuthor'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationAuthor'
          description: ''
    patch:
      operationId: research_authors_partial_update
      description: ViewSet for managing publication authors
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - research
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPublicationAuthor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPublicationAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPublicationAuthor'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationAuthor'
          description: ''
    delete:
      operationId: research_authors_destroy
      description: ViewSet for managing publication authors
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - research
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/research/metrics/:
    get:
      operationId: research_metrics_list
      description: Read-only ViewSet for publication metrics
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - research
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPublicationMetricsList'
          description: ''
  /api/research/metrics/{id}/:
    get:
      operationId: research_metrics_retrieve
      description: Read-only ViewSet for publication metrics
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - research
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationMetrics'
          description: ''
  /api/research/publications/:
    get:
      operationId: research_publications_list
      description: ViewSet for managing publications with role-based permissions
      parameters:
      - in: query
        name: authors
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: corresponding_author
        schema:
          type: integer
      - in: query
        name: is_public
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: publication_type
        schema:
          type: string
          enum:
          - book
          - book_chapter
          - conference_paper
          - journal_article
          - other
          - preprint
          - report
          - thesis
        description: |-
          * `journal_article` - Journal Article
          * `conference_paper` - Conference Paper
          * `book_chapter` - Book Chapter
          * `book` - Book
          * `thesis` - Thesis
          * `report` - Report
          * `preprint` - Preprint
          * `other` - Other
      - in: query
        name: research_area
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - approved
          - draft
          - inactive
          - pending
          - published
          - rejected
        description: |-
          * `pending` - Pending
          * `approved` - Approved
          * `rejected` - Rejected
          * `active` - Active
          * `inactive` - Inactive
          * `draft` - Draft
          * `published` - Published
      - in: query
        name: submitted_by
        schema:
          type: integer
      tags:
      - research
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPublicationListList'
          description: ''
    post:
      operationId: research_publications_create
      description: ViewSet for managing publications with role-based permissions
      tags:
      - research
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicationCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicationCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicationCreateUpdate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationCreateUpdate'
          description: ''
  /api/research/publications/{id}/:
    get:
      operationId: research_publications_retrieve
      description: ViewSet for managing publications with role-based permissions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Publication.
        required: true
      tags:
      - research
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationDetail'
          description: ''
    put:
      operationId: research_publications_update
      description: ViewSet for managing publications with role-based permissions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Publication.
        required: true
      tags:
      - research
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicationCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicationCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicationCreateUpdate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationCreateUpdate'
          description: ''
    patch:
      operationId: research_publications_partial_update
      description: ViewSet for managing publications with role-based permissions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Publication.
        required: true
      tags:
      - research
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPublicationCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPublicationCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPublicationCreateUpdate'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationCreateUpdate'
          description: ''
    delete:
      operationId: research_publications_destroy
      description: ViewSet for managing publications with role-based permissions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Publication.
        required: true
      tags:
      - research
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/research/publications/{id}/approve/:
    post:
      operationId: research_publications_approve_create
      description: Approve or reject a publication
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Publication.
        required: true
      tags:
      - research
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicationApproval'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicationApproval'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicationApproval'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationApproval'
          description: ''
  /api/research/publications/{id}/increment_download/:
    post:
      operationId: research_publications_increment_download_create
      description: Increment download count for a publication
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Publication.
        required: true
      tags:
      - research
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicationDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicationDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicationDetail'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationDetail'
          description: ''
  /api/research/publications/{id}/increment_view/:
    post:
      operationId: research_publications_increment_view_create
      description: Increment view count for a publication
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Publication.
        required: true
      tags:
      - research
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicationDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicationDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicationDetail'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationDetail'
          description: ''
  /api/research/publications/bulk_approve/:
    post:
      operationId: research_publications_bulk_approve_create
      description: Bulk approve/reject publications
      tags:
      - research
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicationDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicationDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicationDetail'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationDetail'
          description: ''
  /api/research/publications/my_publications/:
    get:
      operationId: research_publications_my_publications_retrieve
      description: Get current user's publications
      tags:
      - research
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationDetail'
          description: ''
  /api/research/publications/pending_review/:
    get:
      operationId: research_publications_pending_review_retrieve
      description: Get publications pending admin review
      tags:
      - research
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationDetail'
          description: ''
  /api/research/publications/statistics/:
    get:
      operationId: research_publications_statistics_retrieve
      description: Get publication statistics
      tags:
      - research
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationDetail'
          description: ''
  /api/training/api/applications/:
    get:
      operationId: training_api_applications_list
      description: ViewSet for managing summer training applications
      parameters:
      - in: query
        name: certificate_issued
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: program
        schema:
          type: integer
      - in: query
        name: program__difficulty_level
        schema:
          type: string
          enum:
          - advanced
          - beginner
          - expert
          - intermediate
        description: |-
          * `beginner` - Beginner
          * `intermediate` - Intermediate
          * `advanced` - Advanced
          * `expert` - Expert
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - approved
          - completed
          - rejected
          - submitted
          - under_review
          - withdrawn
        description: |-
          * `submitted` - Submitted
          * `under_review` - Under Review
          * `approved` - Approved
          * `rejected` - Rejected
          * `completed` - Completed
          * `withdrawn` - Withdrawn
      - in: query
        name: year_of_study
        schema:
          type: string
          enum:
          - freshman
          - graduate
          - junior
          - senior
          - sophomore
        description: |-
          * `freshman` - Freshman
          * `sophomore` - Sophomore
          * `junior` - Junior
          * `senior` - Senior
          * `graduate` - Graduate
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSummerTrainingApplicationList'
          description: ''
    post:
      operationId: training_api_applications_create
      description: ViewSet for managing summer training applications
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SummerTrainingApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SummerTrainingApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SummerTrainingApplication'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummerTrainingApplication'
          description: ''
  /api/training/api/applications/{id}/:
    get:
      operationId: training_api_applications_retrieve
      description: ViewSet for managing summer training applications
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this summer training application.
        required: true
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummerTrainingApplication'
          description: ''
    put:
      operationId: training_api_applications_update
      description: ViewSet for managing summer training applications
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this summer training application.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SummerTrainingApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SummerTrainingApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SummerTrainingApplication'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummerTrainingApplication'
          description: ''
    patch:
      operationId: training_api_applications_partial_update
      description: ViewSet for managing summer training applications
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this summer training application.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSummerTrainingApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSummerTrainingApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSummerTrainingApplication'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummerTrainingApplication'
          description: ''
    delete:
      operationId: training_api_applications_destroy
      description: ViewSet for managing summer training applications
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this summer training application.
        required: true
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/training/api/applications/{id}/approve/:
    post:
      operationId: training_api_applications_approve_create
      description: Approve application
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this summer training application.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SummerTrainingApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SummerTrainingApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SummerTrainingApplication'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummerTrainingApplication'
          description: ''
  /api/training/api/applications/{id}/mark_completed/:
    post:
      operationId: training_api_applications_mark_completed_create
      description: Mark application as completed
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this summer training application.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SummerTrainingApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SummerTrainingApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SummerTrainingApplication'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummerTrainingApplication'
          description: ''
  /api/training/api/applications/{id}/reject/:
    post:
      operationId: training_api_applications_reject_create
      description: Reject application
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this summer training application.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SummerTrainingApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SummerTrainingApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SummerTrainingApplication'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummerTrainingApplication'
          description: ''
  /api/training/api/courses/:
    get:
      operationId: training_api_courses_list
      description: ViewSet for managing courses
      parameters:
      - in: query
        name: department
        schema:
          type: integer
      - in: query
        name: difficulty_level
        schema:
          type: string
          enum:
          - advanced
          - beginner
          - expert
          - intermediate
        description: |-
          * `beginner` - Beginner
          * `intermediate` - Intermediate
          * `advanced` - Advanced
          * `expert` - Expert
      - in: query
        name: instructor
        schema:
          type: integer
      - in: query
        name: is_featured
        schema:
          type: boolean
      - in: query
        name: is_free
        schema:
          type: boolean
      - in: query
        name: is_public
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - approved
          - draft
          - inactive
          - pending
          - published
          - rejected
        description: |-
          * `pending` - Pending
          * `approved` - Approved
          * `rejected` - Rejected
          * `active` - Active
          * `inactive` - Inactive
          * `draft` - Draft
          * `published` - Published
      - in: query
        name: training_type
        schema:
          type: string
          enum:
          - course
          - public_service
          - seminar
          - summer_training
          - workshop
        description: |-
          * `course` - Course
          * `summer_training` - Summer Training
          * `public_service` - Public Service
          * `workshop` - Workshop
          * `seminar` - Seminar
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCourseListList'
          description: ''
    post:
      operationId: training_api_courses_create
      description: ViewSet for managing courses
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseDetail'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseDetail'
          description: ''
  /api/training/api/courses/{id}/:
    get:
      operationId: training_api_courses_retrieve
      description: ViewSet for managing courses
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseDetail'
          description: ''
    put:
      operationId: training_api_courses_update
      description: ViewSet for managing courses
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseDetail'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseDetail'
          description: ''
    patch:
      operationId: training_api_courses_partial_update
      description: ViewSet for managing courses
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCourseDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCourseDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourseDetail'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseDetail'
          description: ''
    delete:
      operationId: training_api_courses_destroy
      description: ViewSet for managing courses
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/training/api/courses/{id}/enroll/:
    post:
      operationId: training_api_courses_enroll_create
      description: Enroll user in course
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseDetail'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseDetail'
          description: ''
  /api/training/api/courses/{id}/enrollments/:
    get:
      operationId: training_api_courses_enrollments_retrieve
      description: Get course enrollments (admin/moderator only)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseDetail'
          description: ''
  /api/training/api/courses/featured/:
    get:
      operationId: training_api_courses_featured_retrieve
      description: Get featured courses
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseDetail'
          description: ''
  /api/training/api/courses/upcoming/:
    get:
      operationId: training_api_courses_upcoming_retrieve
      description: Get upcoming courses
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseDetail'
          description: ''
  /api/training/api/enrollments/:
    get:
      operationId: training_api_enrollments_list
      description: ViewSet for managing course enrollments
      parameters:
      - in: query
        name: certificate_issued
        schema:
          type: boolean
      - in: query
        name: course
        schema:
          type: integer
      - in: query
        name: course__training_type
        schema:
          type: string
          enum:
          - course
          - public_service
          - seminar
          - summer_training
          - workshop
        description: |-
          * `course` - Course
          * `summer_training` - Summer Training
          * `public_service` - Public Service
          * `workshop` - Workshop
          * `seminar` - Seminar
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: payment_status
        schema:
          type: string
          enum:
          - failed
          - paid
          - pending
          - refunded
        description: |-
          * `pending` - Pending
          * `paid` - Paid
          * `failed` - Failed
          * `refunded` - Refunded
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - approved
          - completed
          - dropped
          - pending
          - rejected
        description: |-
          * `pending` - Pending
          * `approved` - Approved
          * `rejected` - Rejected
          * `completed` - Completed
          * `dropped` - Dropped
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCourseEnrollmentList'
          description: ''
    post:
      operationId: training_api_enrollments_create
      description: ViewSet for managing course enrollments
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseEnrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseEnrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseEnrollment'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseEnrollment'
          description: ''
  /api/training/api/enrollments/{id}/:
    get:
      operationId: training_api_enrollments_retrieve
      description: ViewSet for managing course enrollments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course enrollment.
        required: true
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseEnrollment'
          description: ''
    put:
      operationId: training_api_enrollments_update
      description: ViewSet for managing course enrollments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course enrollment.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseEnrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseEnrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseEnrollment'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseEnrollment'
          description: ''
    patch:
      operationId: training_api_enrollments_partial_update
      description: ViewSet for managing course enrollments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course enrollment.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCourseEnrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCourseEnrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourseEnrollment'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseEnrollment'
          description: ''
    delete:
      operationId: training_api_enrollments_destroy
      description: ViewSet for managing course enrollments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course enrollment.
        required: true
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/training/api/enrollments/{id}/issue_certificate/:
    post:
      operationId: training_api_enrollments_issue_certificate_create
      description: Issue certificate for completed enrollment
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course enrollment.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseEnrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseEnrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseEnrollment'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseEnrollment'
          description: ''
  /api/training/api/enrollments/{id}/mark_completed/:
    post:
      operationId: training_api_enrollments_mark_completed_create
      description: Mark enrollment as completed
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course enrollment.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseEnrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseEnrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseEnrollment'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseEnrollment'
          description: ''
  /api/training/api/public-services/:
    get:
      operationId: training_api_public_services_list
      description: ViewSet for managing public services
      parameters:
      - in: query
        name: coordinator
        schema:
          type: integer
      - in: query
        name: department
        schema:
          type: integer
      - in: query
        name: is_featured
        schema:
          type: boolean
      - in: query
        name: is_free
        schema:
          type: boolean
      - in: query
        name: is_ongoing
        schema:
          type: boolean
      - in: query
        name: is_public
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: service_category
        schema:
          type: string
          enum:
          - consultation
          - equipment
          - other
          - research
          - testing
          - training
        description: |-
          * `consultation` - Consultation
          * `testing` - Testing & Analysis
          * `training` - Training & Workshops
          * `research` - Research Collaboration
          * `equipment` - Equipment Access
          * `other` - Other Services
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - approved
          - draft
          - inactive
          - pending
          - published
          - rejected
        description: |-
          * `pending` - Pending
          * `approved` - Approved
          * `rejected` - Rejected
          * `active` - Active
          * `inactive` - Inactive
          * `draft` - Draft
          * `published` - Published
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPublicServiceListList'
          description: ''
    post:
      operationId: training_api_public_services_create
      description: ViewSet for managing public services
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicServiceDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicServiceDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicServiceDetail'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicServiceDetail'
          description: ''
  /api/training/api/public-services/{id}/:
    get:
      operationId: training_api_public_services_retrieve
      description: ViewSet for managing public services
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this public service.
        required: true
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicServiceDetail'
          description: ''
    put:
      operationId: training_api_public_services_update
      description: ViewSet for managing public services
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this public service.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicServiceDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicServiceDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicServiceDetail'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicServiceDetail'
          description: ''
    patch:
      operationId: training_api_public_services_partial_update
      description: ViewSet for managing public services
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this public service.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPublicServiceDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPublicServiceDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPublicServiceDetail'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicServiceDetail'
          description: ''
    delete:
      operationId: training_api_public_services_destroy
      description: ViewSet for managing public services
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this public service.
        required: true
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/training/api/public-services/{id}/request_service/:
    post:
      operationId: training_api_public_services_request_service_create
      description: Request a public service
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this public service.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicServiceDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicServiceDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicServiceDetail'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicServiceDetail'
          description: ''
  /api/training/api/public-services/{id}/requests/:
    get:
      operationId: training_api_public_services_requests_retrieve
      description: Get service requests (admin/moderator only)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this public service.
        required: true
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicServiceDetail'
          description: ''
  /api/training/api/public-services/available/:
    get:
      operationId: training_api_public_services_available_retrieve
      description: Get currently available services
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicServiceDetail'
          description: ''
  /api/training/api/public-services/featured/:
    get:
      operationId: training_api_public_services_featured_retrieve
      description: Get featured public services
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicServiceDetail'
          description: ''
  /api/training/api/service-requests/:
    get:
      operationId: training_api_service_requests_list
      description: ViewSet for managing public service requests
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: payment_required
        schema:
          type: boolean
      - in: query
        name: payment_status
        schema:
          type: string
          enum:
          - failed
          - paid
          - pending
          - refunded
        description: |-
          * `pending` - Pending
          * `paid` - Paid
          * `failed` - Failed
          * `refunded` - Refunded
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: service
        schema:
          type: integer
      - in: query
        name: service__service_category
        schema:
          type: string
          enum:
          - consultation
          - equipment
          - other
          - research
          - testing
          - training
        description: |-
          * `consultation` - Consultation
          * `testing` - Testing & Analysis
          * `training` - Training & Workshops
          * `research` - Research Collaboration
          * `equipment` - Equipment Access
          * `other` - Other Services
      - in: query
        name: status
        schema:
          type: string
          enum:
          - approved
          - cancelled
          - completed
          - in_progress
          - rejected
          - submitted
          - under_review
        description: |-
          * `submitted` - Submitted
          * `under_review` - Under Review
          * `approved` - Approved
          * `in_progress` - In Progress
          * `completed` - Completed
          * `rejected` - Rejected
          * `cancelled` - Cancelled
      - in: query
        name: urgency_level
        schema:
          type: string
          enum:
          - high
          - low
          - medium
          - urgent
        description: |-
          * `low` - Low
          * `medium` - Medium
          * `high` - High
          * `urgent` - Urgent
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPublicServiceRequestList'
          description: ''
    post:
      operationId: training_api_service_requests_create
      description: ViewSet for managing public service requests
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicServiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicServiceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicServiceRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicServiceRequest'
          description: ''
  /api/training/api/service-requests/{id}/:
    get:
      operationId: training_api_service_requests_retrieve
      description: ViewSet for managing public service requests
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this public service request.
        required: true
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicServiceRequest'
          description: ''
    put:
      operationId: training_api_service_requests_update
      description: ViewSet for managing public service requests
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this public service request.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicServiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicServiceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicServiceRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicServiceRequest'
          description: ''
    patch:
      operationId: training_api_service_requests_partial_update
      description: ViewSet for managing public service requests
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this public service request.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPublicServiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPublicServiceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPublicServiceRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicServiceRequest'
          description: ''
    delete:
      operationId: training_api_service_requests_destroy
      description: ViewSet for managing public service requests
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this public service request.
        required: true
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/training/api/service-requests/{id}/approve/:
    post:
      operationId: training_api_service_requests_approve_create
      description: Approve service request
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this public service request.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicServiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicServiceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicServiceRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicServiceRequest'
          description: ''
  /api/training/api/service-requests/{id}/mark_completed/:
    post:
      operationId: training_api_service_requests_mark_completed_create
      description: Mark service request as completed
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this public service request.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicServiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicServiceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicServiceRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicServiceRequest'
          description: ''
  /api/training/api/service-requests/{id}/mark_in_progress/:
    post:
      operationId: training_api_service_requests_mark_in_progress_create
      description: Mark service request as in progress
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this public service request.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicServiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicServiceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicServiceRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicServiceRequest'
          description: ''
  /api/training/api/service-requests/{id}/submit_feedback/:
    post:
      operationId: training_api_service_requests_submit_feedback_create
      description: Submit client feedback for completed request
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this public service request.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicServiceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicServiceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicServiceRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicServiceRequest'
          description: ''
  /api/training/api/summer-training/:
    get:
      operationId: training_api_summer_training_list
      description: ViewSet for managing summer training programs
      parameters:
      - in: query
        name: department
        schema:
          type: integer
      - in: query
        name: difficulty_level
        schema:
          type: string
          enum:
          - advanced
          - beginner
          - expert
          - intermediate
        description: |-
          * `beginner` - Beginner
          * `intermediate` - Intermediate
          * `advanced` - Advanced
          * `expert` - Expert
      - in: query
        name: is_featured
        schema:
          type: boolean
      - in: query
        name: is_paid
        schema:
          type: boolean
      - in: query
        name: is_public
        schema:
          type: boolean
      - in: query
        name: lab
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: provides_certificate
        schema:
          type: boolean
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - approved
          - draft
          - inactive
          - pending
          - published
          - rejected
        description: |-
          * `pending` - Pending
          * `approved` - Approved
          * `rejected` - Rejected
          * `active` - Active
          * `inactive` - Inactive
          * `draft` - Draft
          * `published` - Published
      - in: query
        name: supervisor
        schema:
          type: integer
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSummerTrainingListList'
          description: ''
    post:
      operationId: training_api_summer_training_create
      description: ViewSet for managing summer training programs
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SummerTrainingDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SummerTrainingDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SummerTrainingDetail'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummerTrainingDetail'
          description: ''
  /api/training/api/summer-training/{id}/:
    get:
      operationId: training_api_summer_training_retrieve
      description: ViewSet for managing summer training programs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this summer training.
        required: true
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummerTrainingDetail'
          description: ''
    put:
      operationId: training_api_summer_training_update
      description: ViewSet for managing summer training programs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this summer training.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SummerTrainingDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SummerTrainingDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SummerTrainingDetail'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummerTrainingDetail'
          description: ''
    patch:
      operationId: training_api_summer_training_partial_update
      description: ViewSet for managing summer training programs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this summer training.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSummerTrainingDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSummerTrainingDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSummerTrainingDetail'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummerTrainingDetail'
          description: ''
    delete:
      operationId: training_api_summer_training_destroy
      description: ViewSet for managing summer training programs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this summer training.
        required: true
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/training/api/summer-training/{id}/applications/:
    get:
      operationId: training_api_summer_training_applications_retrieve
      description: Get program applications (admin/moderator only)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this summer training.
        required: true
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummerTrainingDetail'
          description: ''
  /api/training/api/summer-training/{id}/apply/:
    post:
      operationId: training_api_summer_training_apply_create
      description: Apply to summer training program
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this summer training.
        required: true
      tags:
      - training
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SummerTrainingDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SummerTrainingDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SummerTrainingDetail'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummerTrainingDetail'
          description: ''
  /api/training/api/summer-training/featured/:
    get:
      operationId: training_api_summer_training_featured_retrieve
      description: Get featured summer training programs
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummerTrainingDetail'
          description: ''
  /api/training/api/summer-training/upcoming/:
    get:
      operationId: training_api_summer_training_upcoming_retrieve
      description: Get upcoming summer training programs
      tags:
      - training
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummerTrainingDetail'
          description: ''
components:
  schemas:
    AnnouncementApproval:
      type: object
      description: Serializer for announcement approval
      properties:
        status:
          $ref: '#/components/schemas/Status3a6Enum'
    AnnouncementCreateUpdate:
      type: object
      description: Serializer for creating and updating announcements
      properties:
        title:
          type: string
          maxLength: 200
        content:
          type: string
          description: Main announcement content
        summary:
          type: string
          description: Brief summary for list views (auto-generated if empty)
          maxLength: 300
        announcement_type:
          $ref: '#/components/schemas/AnnouncementTypeEnum'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        target_audience:
          $ref: '#/components/schemas/TargetAudienceEnum'
        is_pinned:
          type: boolean
          description: Pin announcement to top of list
        is_featured:
          type: boolean
          description: Feature on homepage
        publish_at:
          type: string
          format: date-time
          description: When to publish the announcement
        expires_at:
          type: string
          format: date-time
          nullable: true
          description: When announcement expires (optional)
        attachment:
          type: string
          format: uri
          description: Optional attachment (PDF, DOC, DOCX, JPG, PNG)
          pattern: (?:pdf|doc|docx|jpg|jpeg|png)$
      required:
      - content
      - title
    AnnouncementDetail:
      type: object
      description: Serializer for announcement detail view
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        content:
          type: string
          description: Main announcement content
        summary:
          type: string
          description: Brief summary for list views (auto-generated if empty)
          maxLength: 300
        announcement_type:
          $ref: '#/components/schemas/AnnouncementTypeEnum'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        target_audience:
          $ref: '#/components/schemas/TargetAudienceEnum'
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        is_pinned:
          type: boolean
          description: Pin announcement to top of list
        is_featured:
          type: boolean
          description: Feature on homepage
        publish_at:
          type: string
          format: date-time
          description: When to publish the announcement
        expires_at:
          type: string
          format: date-time
          nullable: true
          description: When announcement expires (optional)
        author:
          allOf:
          - $ref: '#/components/schemas/Author'
          readOnly: true
        approved_by:
          allOf:
          - $ref: '#/components/schemas/Author'
          readOnly: true
        approved_at:
          type: string
          format: date-time
          nullable: true
        attachment:
          type: string
          format: uri
          description: Optional attachment (PDF, DOC, DOCX, JPG, PNG)
          pattern: (?:pdf|doc|docx|jpg|jpeg|png)$
        view_count:
          type: integer
        is_published:
          type: boolean
          readOnly: true
        is_expired:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - approved_by
      - author
      - content
      - created_at
      - id
      - is_expired
      - is_published
      - title
      - updated_at
    AnnouncementList:
      type: object
      description: Serializer for announcement list view
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        summary:
          type: string
          description: Brief summary for list views (auto-generated if empty)
          maxLength: 300
        announcement_type:
          $ref: '#/components/schemas/AnnouncementTypeEnum'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        target_audience:
          $ref: '#/components/schemas/TargetAudienceEnum'
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        is_pinned:
          type: boolean
          description: Pin announcement to top of list
        is_featured:
          type: boolean
          description: Feature on homepage
        publish_at:
          type: string
          format: date-time
          description: When to publish the announcement
        expires_at:
          type: string
          format: date-time
          nullable: true
          description: When announcement expires (optional)
        author:
          allOf:
          - $ref: '#/components/schemas/Author'
          readOnly: true
        view_count:
          type: integer
        is_published:
          type: boolean
          readOnly: true
        is_expired:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - author
      - created_at
      - id
      - is_expired
      - is_published
      - title
    AnnouncementTypeEnum:
      enum:
      - general
      - urgent
      - maintenance
      - event
      - deadline
      - news
      - policy
      type: string
      description: |-
        * `general` - General
        * `urgent` - Urgent
        * `maintenance` - Maintenance
        * `event` - Event
        * `deadline` - Deadline
        * `news` - News
        * `policy` - Policy Update
    Author:
      type: object
      description: Serializer for author information
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        full_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - email
      - full_name
      - id
    CategoryEnum:
      enum:
      - event
      - activity
      - workshop
      - seminar
      - conference
      - training
      - collaboration
      - achievement
      - general
      type: string
      description: |-
        * `event` - Event
        * `activity` - Activity
        * `workshop` - Workshop
        * `seminar` - Seminar
        * `conference` - Conference
        * `training` - Training
        * `collaboration` - Collaboration
        * `achievement` - Achievement
        * `general` - General
    Comment:
      type: object
      description: Serializer for comments
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
          maxLength: 1000
        author:
          allOf:
          - $ref: '#/components/schemas/Author'
          readOnly: true
        is_approved:
          type: boolean
        parent:
          type: integer
          nullable: true
        replies:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - author
      - content
      - created_at
      - id
      - replies
      - updated_at
    CommentCreate:
      type: object
      description: Serializer for creating comments
      properties:
        content:
          type: string
          maxLength: 1000
        parent:
          type: integer
          nullable: true
      required:
      - content
    CourseDetail:
      type: object
      description: Serializer for course detail view
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        short_description:
          type: string
          description: Brief description for course listings
          maxLength: 300
        course_code:
          type: string
          description: Unique course identifier (e.g., CS101)
          maxLength: 20
        credits:
          type: integer
          maximum: 10
          minimum: 1
        duration_hours:
          type: integer
          description: Total course duration in hours
        training_type:
          $ref: '#/components/schemas/TrainingTypeEnum'
        difficulty_level:
          $ref: '#/components/schemas/DifficultyLevelEnum'
        instructor:
          type: integer
          nullable: true
        instructor_name:
          type: string
          readOnly: true
        department:
          type: integer
          nullable: true
        department_name:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        registration_deadline:
          type: string
          format: date
        max_participants:
          type: integer
        min_participants:
          type: integer
        current_enrollment:
          type: integer
        enrollment_percentage:
          type: string
          readOnly: true
        enrollments_count:
          type: string
          readOnly: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        is_free:
          type: boolean
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        is_featured:
          type: boolean
        is_public:
          type: boolean
        prerequisites:
          type: string
          description: Course prerequisites and requirements
        materials_provided:
          type: string
          description: Materials and resources provided
        featured_image:
          type: string
          format: uri
          nullable: true
        syllabus:
          type: string
          format: uri
          nullable: true
          description: Course syllabus PDF
        tags:
          type: string
          description: Comma-separated tags for categorization
          maxLength: 500
        is_registration_open:
          type: string
          readOnly: true
        is_full:
          type: string
          readOnly: true
        can_register:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - can_register
      - course_code
      - created_at
      - department_name
      - description
      - duration_hours
      - end_date
      - enrollment_percentage
      - enrollments_count
      - id
      - instructor_name
      - is_full
      - is_registration_open
      - registration_deadline
      - start_date
      - title
      - updated_at
    CourseEnrollment:
      type: object
      description: Serializer for course enrollments
      properties:
        id:
          type: integer
          readOnly: true
        course:
          type: integer
        course_title:
          type: string
          readOnly: true
        course_code:
          type: string
          readOnly: true
        student:
          type: integer
        student_name:
          type: string
          readOnly: true
        enrollment_date:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/CourseEnrollmentStatusEnum'
        payment_status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        payment_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        payment_reference:
          type: string
          maxLength: 100
        grade:
          type: string
          description: Final grade (A, B, C, D, F)
          maxLength: 5
        attendance_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
        completion_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        certificate_issued:
          type: boolean
        certificate_number:
          type: string
          maxLength: 50
        notes:
          type: string
          description: Additional notes about the enrollment
        is_active:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - completion_date
      - course
      - course_code
      - course_title
      - created_at
      - enrollment_date
      - id
      - is_active
      - payment_date
      - student
      - student_name
      - updated_at
    CourseEnrollmentStatusEnum:
      enum:
      - pending
      - approved
      - rejected
      - completed
      - dropped
      type: string
      description: |-
        * `pending` - Pending
        * `approved` - Approved
        * `rejected` - Rejected
        * `completed` - Completed
        * `dropped` - Dropped
    CourseList:
      type: object
      description: Serializer for course list view
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        short_description:
          type: string
          description: Brief description for course listings
          maxLength: 300
        course_code:
          type: string
          description: Unique course identifier (e.g., CS101)
          maxLength: 20
        credits:
          type: integer
          maximum: 10
          minimum: 1
        duration_hours:
          type: integer
          description: Total course duration in hours
        training_type:
          $ref: '#/components/schemas/TrainingTypeEnum'
        difficulty_level:
          $ref: '#/components/schemas/DifficultyLevelEnum'
        instructor_name:
          type: string
          readOnly: true
        department_name:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        registration_deadline:
          type: string
          format: date
        max_participants:
          type: integer
        current_enrollment:
          type: integer
        enrollment_percentage:
          type: string
          readOnly: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        is_free:
          type: boolean
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        is_featured:
          type: boolean
        featured_image:
          type: string
          format: uri
          nullable: true
        is_registration_open:
          type: string
          readOnly: true
        is_full:
          type: string
          readOnly: true
        can_register:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - can_register
      - course_code
      - created_at
      - department_name
      - duration_hours
      - end_date
      - enrollment_percentage
      - id
      - instructor_name
      - is_full
      - is_registration_open
      - registration_deadline
      - start_date
      - title
    Department:
      type: object
      description: Full serializer for department details
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        head:
          allOf:
          - $ref: '#/components/schemas/UserList'
          readOnly: true
        head_id:
          type: integer
          writeOnly: true
          nullable: true
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 20
        location:
          type: string
          maxLength: 200
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        total_labs:
          type: string
          readOnly: true
        total_researchers:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - head
      - id
      - name
      - total_labs
      - total_researchers
      - updated_at
    DepartmentList:
      type: object
      description: Simplified serializer for department lists
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        head_name:
          type: string
          readOnly: true
        total_labs:
          type: string
          readOnly: true
        total_researchers:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - head_name
      - id
      - name
      - total_labs
      - total_researchers
    DifficultyLevelEnum:
      enum:
      - beginner
      - intermediate
      - advanced
      - expert
      type: string
      description: |-
        * `beginner` - Beginner
        * `intermediate` - Intermediate
        * `advanced` - Advanced
        * `expert` - Expert
    Lab:
      type: object
      description: Full serializer for lab details
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        department:
          allOf:
          - $ref: '#/components/schemas/DepartmentList'
          readOnly: true
        department_id:
          type: integer
          writeOnly: true
        description:
          type: string
        head:
          allOf:
          - $ref: '#/components/schemas/UserList'
          readOnly: true
        head_id:
          type: integer
          writeOnly: true
          nullable: true
        equipment:
          type: string
          description: List of available equipment
        capacity:
          type: integer
          description: Maximum number of researchers
        location:
          type: string
          maxLength: 200
        phone:
          type: string
          maxLength: 20
        current_researchers_count:
          type: string
          readOnly: true
        available_spots:
          type: string
          readOnly: true
        is_at_capacity:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - available_spots
      - created_at
      - current_researchers_count
      - department
      - department_id
      - head
      - id
      - is_at_capacity
      - name
      - updated_at
    LabList:
      type: object
      description: Simplified serializer for lab lists
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        department_name:
          type: string
          readOnly: true
        head_name:
          type: string
          readOnly: true
        current_researchers_count:
          type: string
          readOnly: true
        capacity:
          type: integer
          description: Maximum number of researchers
        available_spots:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - available_spots
      - created_at
      - current_researchers_count
      - department_name
      - head_name
      - id
      - name
    PaginatedAnnouncementListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AnnouncementList'
    PaginatedCommentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
    PaginatedCourseEnrollmentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CourseEnrollment'
    PaginatedCourseListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CourseList'
    PaginatedDepartmentListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DepartmentList'
    PaginatedLabListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LabList'
    PaginatedPostListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PostList'
    PaginatedPublicServiceListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PublicServiceList'
    PaginatedPublicServiceRequestList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PublicServiceRequest'
    PaginatedPublicationAuthorList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PublicationAuthor'
    PaginatedPublicationListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PublicationList'
    PaginatedPublicationMetricsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PublicationMetrics'
    PaginatedResearcherAssignmentListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResearcherAssignmentList'
    PaginatedSummerTrainingApplicationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SummerTrainingApplication'
    PaginatedSummerTrainingListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SummerTrainingList'
    PaginatedUserListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserList'
    PatchedAnnouncementCreateUpdate:
      type: object
      description: Serializer for creating and updating announcements
      properties:
        title:
          type: string
          maxLength: 200
        content:
          type: string
          description: Main announcement content
        summary:
          type: string
          description: Brief summary for list views (auto-generated if empty)
          maxLength: 300
        announcement_type:
          $ref: '#/components/schemas/AnnouncementTypeEnum'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        target_audience:
          $ref: '#/components/schemas/TargetAudienceEnum'
        is_pinned:
          type: boolean
          description: Pin announcement to top of list
        is_featured:
          type: boolean
          description: Feature on homepage
        publish_at:
          type: string
          format: date-time
          description: When to publish the announcement
        expires_at:
          type: string
          format: date-time
          nullable: true
          description: When announcement expires (optional)
        attachment:
          type: string
          format: uri
          description: Optional attachment (PDF, DOC, DOCX, JPG, PNG)
          pattern: (?:pdf|doc|docx|jpg|jpeg|png)$
    PatchedCommentCreate:
      type: object
      description: Serializer for creating comments
      properties:
        content:
          type: string
          maxLength: 1000
        parent:
          type: integer
          nullable: true
    PatchedCourseDetail:
      type: object
      description: Serializer for course detail view
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        short_description:
          type: string
          description: Brief description for course listings
          maxLength: 300
        course_code:
          type: string
          description: Unique course identifier (e.g., CS101)
          maxLength: 20
        credits:
          type: integer
          maximum: 10
          minimum: 1
        duration_hours:
          type: integer
          description: Total course duration in hours
        training_type:
          $ref: '#/components/schemas/TrainingTypeEnum'
        difficulty_level:
          $ref: '#/components/schemas/DifficultyLevelEnum'
        instructor:
          type: integer
          nullable: true
        instructor_name:
          type: string
          readOnly: true
        department:
          type: integer
          nullable: true
        department_name:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        registration_deadline:
          type: string
          format: date
        max_participants:
          type: integer
        min_participants:
          type: integer
        current_enrollment:
          type: integer
        enrollment_percentage:
          type: string
          readOnly: true
        enrollments_count:
          type: string
          readOnly: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        is_free:
          type: boolean
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        is_featured:
          type: boolean
        is_public:
          type: boolean
        prerequisites:
          type: string
          description: Course prerequisites and requirements
        materials_provided:
          type: string
          description: Materials and resources provided
        featured_image:
          type: string
          format: uri
          nullable: true
        syllabus:
          type: string
          format: uri
          nullable: true
          description: Course syllabus PDF
        tags:
          type: string
          description: Comma-separated tags for categorization
          maxLength: 500
        is_registration_open:
          type: string
          readOnly: true
        is_full:
          type: string
          readOnly: true
        can_register:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedCourseEnrollment:
      type: object
      description: Serializer for course enrollments
      properties:
        id:
          type: integer
          readOnly: true
        course:
          type: integer
        course_title:
          type: string
          readOnly: true
        course_code:
          type: string
          readOnly: true
        student:
          type: integer
        student_name:
          type: string
          readOnly: true
        enrollment_date:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/CourseEnrollmentStatusEnum'
        payment_status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        payment_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        payment_reference:
          type: string
          maxLength: 100
        grade:
          type: string
          description: Final grade (A, B, C, D, F)
          maxLength: 5
        attendance_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
        completion_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        certificate_issued:
          type: boolean
        certificate_number:
          type: string
          maxLength: 50
        notes:
          type: string
          description: Additional notes about the enrollment
        is_active:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedDepartment:
      type: object
      description: Full serializer for department details
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        head:
          allOf:
          - $ref: '#/components/schemas/UserList'
          readOnly: true
        head_id:
          type: integer
          writeOnly: true
          nullable: true
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 20
        location:
          type: string
          maxLength: 200
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        total_labs:
          type: string
          readOnly: true
        total_researchers:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedLab:
      type: object
      description: Full serializer for lab details
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        department:
          allOf:
          - $ref: '#/components/schemas/DepartmentList'
          readOnly: true
        department_id:
          type: integer
          writeOnly: true
        description:
          type: string
        head:
          allOf:
          - $ref: '#/components/schemas/UserList'
          readOnly: true
        head_id:
          type: integer
          writeOnly: true
          nullable: true
        equipment:
          type: string
          description: List of available equipment
        capacity:
          type: integer
          description: Maximum number of researchers
        location:
          type: string
          maxLength: 200
        phone:
          type: string
          maxLength: 20
        current_researchers_count:
          type: string
          readOnly: true
        available_spots:
          type: string
          readOnly: true
        is_at_capacity:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedPostCreateUpdate:
      type: object
      description: Serializer for creating and updating posts
      properties:
        title:
          type: string
          maxLength: 200
        content:
          type: string
          description: Main post content
        excerpt:
          type: string
          description: Brief excerpt for list views (auto-generated if empty)
          maxLength: 300
        category:
          $ref: '#/components/schemas/CategoryEnum'
        tags:
          type: string
          description: Comma-separated tags for categorization
          maxLength: 200
        event_date:
          type: string
          format: date-time
          nullable: true
          description: Date and time for events (optional)
        event_location:
          type: string
          description: Location for events (optional)
          maxLength: 200
        registration_required:
          type: boolean
          description: Whether registration is required for this event
        registration_deadline:
          type: string
          format: date-time
          nullable: true
          description: Registration deadline (if applicable)
        max_participants:
          type: integer
          nullable: true
          description: Maximum number of participants (optional)
        is_featured:
          type: boolean
          description: Feature on homepage
        is_public:
          type: boolean
          description: Visible to public (non-authenticated users)
        publish_at:
          type: string
          format: date-time
          description: When to publish the post
        featured_image:
          type: string
          format: uri
          description: Featured image for the post
        attachment:
          type: string
          format: uri
          description: Optional attachment (PDF, DOC, DOCX, JPG, PNG)
          pattern: (?:pdf|doc|docx|jpg|jpeg|png)$
    PatchedPublicServiceDetail:
      type: object
      description: Serializer for public service detail view
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        short_description:
          type: string
          description: Brief description for service listings
          maxLength: 300
        service_code:
          type: string
          description: Unique service identifier (e.g., PS2024-01)
          maxLength: 20
        service_category:
          $ref: '#/components/schemas/ServiceCategoryEnum'
        coordinator:
          type: integer
          nullable: true
        coordinator_name:
          type: string
          readOnly: true
        department:
          type: integer
          nullable: true
        department_name:
          type: string
          readOnly: true
        is_ongoing:
          type: boolean
          description: Whether this service is continuously available
        start_date:
          type: string
          format: date
          nullable: true
          description: Start date for time-limited services
        end_date:
          type: string
          format: date
          nullable: true
          description: End date for time-limited services
        max_concurrent_requests:
          type: integer
          description: Maximum number of concurrent service requests
        current_requests:
          type: integer
        requests_count:
          type: string
          readOnly: true
        is_free:
          type: boolean
        base_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Base service price
        pricing_details:
          type: string
          description: Detailed pricing information and structure
        eligibility_criteria:
          type: string
          description: Who can access this service
        required_documents:
          type: string
          description: Documents required for service request
        process_description:
          type: string
          description: How to request and receive this service
        estimated_turnaround:
          type: string
          description: Estimated time to complete service (e.g., '2-3 business days')
          maxLength: 100
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        is_featured:
          type: boolean
        is_public:
          type: boolean
        contact_email:
          type: string
          format: email
          maxLength: 254
        contact_phone:
          type: string
          maxLength: 20
        location:
          type: string
          description: Physical location where service is provided
          maxLength: 200
        featured_image:
          type: string
          format: uri
          nullable: true
        service_brochure:
          type: string
          format: uri
          nullable: true
          description: Service information brochure
        tags:
          type: string
          description: Comma-separated tags for categorization
          maxLength: 500
        is_available:
          type: string
          readOnly: true
        is_at_capacity:
          type: string
          readOnly: true
        can_request:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedPublicServiceRequest:
      type: object
      description: Serializer for public service requests
      properties:
        id:
          type: integer
          readOnly: true
        service:
          type: integer
          readOnly: true
        service_title:
          type: string
          readOnly: true
        service_code:
          type: string
          readOnly: true
        requester:
          type: integer
          readOnly: true
        requester_name:
          type: string
          readOnly: true
        request_date:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/PublicServiceRequestStatusEnum'
        request_description:
          type: string
          description: Detailed description of what you need
        urgency_level:
          $ref: '#/components/schemas/UrgencyLevelEnum'
        preferred_date:
          type: string
          format: date
          nullable: true
          description: Preferred date for service delivery
        contact_person:
          type: string
          description: Primary contact person for this request
          maxLength: 100
        contact_email:
          type: string
          format: email
          maxLength: 254
        contact_phone:
          type: string
          maxLength: 20
        organization:
          type: string
          description: Organization or institution making the request
          maxLength: 200
        supporting_documents:
          type: string
          format: uri
          nullable: true
          description: Supporting documents for the request
        assigned_to:
          type: integer
          readOnly: true
          nullable: true
        assigned_to_name:
          type: string
          readOnly: true
        estimated_completion:
          type: string
          format: date
          readOnly: true
          nullable: true
        actual_completion:
          type: string
          format: date
          readOnly: true
          nullable: true
        payment_required:
          type: boolean
        payment_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        payment_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        service_notes:
          type: string
          description: Internal notes about service delivery
        results_summary:
          type: string
          description: Summary of service results
        client_feedback:
          type: string
          description: Client feedback about the service
        satisfaction_rating:
          type: integer
          maximum: 5
          minimum: 1
          nullable: true
          description: Client satisfaction rating (1-5)
        is_active:
          type: string
          readOnly: true
        is_overdue:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedPublicationAuthor:
      type: object
      description: Serializer for PublicationAuthor model
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: integer
        author_name:
          type: string
          readOnly: true
        author_email:
          type: string
          format: email
          readOnly: true
        author_orcid:
          type: string
          readOnly: true
        order:
          type: integer
          description: Order of author in publication (1 = first author)
        role:
          type: string
          description: Author's role in the research (e.g., Principal Investigator,
            Data Analyst)
          maxLength: 100
        affiliation_at_publication:
          type: string
          description: Author's affiliation when this publication was created
          maxLength: 300
        contribution:
          type: string
          description: Description of author's contribution to the research
        is_corresponding:
          type: boolean
          description: Is this author the corresponding author?
        is_first_author:
          type: boolean
          description: Is this the first author?
        is_last_author:
          type: boolean
          description: Is this the last/senior author?
    PatchedPublicationCreateUpdate:
      type: object
      description: Serializer for creating and updating publications
      properties:
        title:
          type: string
          maxLength: 500
        abstract:
          type: string
          maxLength: 2000
        publication_type:
          $ref: '#/components/schemas/PublicationTypeEnum'
        journal_name:
          type: string
          maxLength: 300
        conference_name:
          type: string
          maxLength: 300
        publisher:
          type: string
          maxLength: 200
        volume:
          type: string
          maxLength: 50
        issue:
          type: string
          maxLength: 50
        pages:
          type: string
          description: e.g., 123-145
          maxLength: 50
        publication_date:
          type: string
          format: date
          nullable: true
        doi:
          type: string
          description: Digital Object Identifier
          maxLength: 200
        isbn:
          type: string
          description: International Standard Book Number
          maxLength: 20
        issn:
          type: string
          description: International Standard Serial Number
          maxLength: 20
        pmid:
          type: string
          description: PubMed ID
          maxLength: 20
        url:
          type: string
          format: uri
          description: Link to publication
          maxLength: 200
        pdf_url:
          type: string
          format: uri
          description: Direct link to PDF
          maxLength: 200
        document_file:
          type: string
          format: uri
          description: Upload publication document (PDF, DOC, DOCX only)
          pattern: (?:pdf|doc|docx)$
        keywords:
          type: string
          description: Comma-separated keywords
        research_area:
          type: string
          maxLength: 200
        corresponding_author:
          type: integer
          nullable: true
          description: Main contact author for this publication
        is_public:
          type: boolean
          description: Make publication visible to public
        citation_count:
          type: integer
        authors_data:
          type: array
          items:
            $ref: '#/components/schemas/PublicationAuthor'
          writeOnly: true
    PatchedResearcherAssignment:
      type: object
      description: Serializer for researcher assignments
      properties:
        id:
          type: integer
          readOnly: true
        researcher:
          allOf:
          - $ref: '#/components/schemas/UserList'
          readOnly: true
        researcher_id:
          type: integer
          writeOnly: true
        lab:
          allOf:
          - $ref: '#/components/schemas/LabList'
          readOnly: true
        lab_id:
          type: integer
          writeOnly: true
        department:
          allOf:
          - $ref: '#/components/schemas/DepartmentList'
          readOnly: true
        department_id:
          type: integer
          writeOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        position:
          type: string
          description: Position/role in the lab (e.g., PhD Student, Postdoc, Research
            Assistant)
          maxLength: 100
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        assigned_by:
          allOf:
          - $ref: '#/components/schemas/UserList'
          readOnly: true
        notes:
          type: string
          description: Additional notes about the assignment
        duration_days:
          type: string
          readOnly: true
        is_active:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedSummerTrainingApplication:
      type: object
      description: Serializer for summer training applications
      properties:
        id:
          type: integer
          readOnly: true
        program:
          type: integer
          readOnly: true
        program_title:
          type: string
          readOnly: true
        program_code:
          type: string
          readOnly: true
        applicant:
          type: integer
          readOnly: true
        applicant_name:
          type: string
          readOnly: true
        application_date:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/SummerTrainingApplicationStatusEnum'
        university:
          type: string
          maxLength: 200
        major:
          type: string
          maxLength: 100
        year_of_study:
          $ref: '#/components/schemas/YearOfStudyEnum'
        gpa:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        motivation_letter:
          type: string
          description: Why do you want to join this program?
        relevant_experience:
          type: string
          description: Relevant academic or professional experience
        skills_and_interests:
          type: string
          description: Technical skills and research interests
        cv_file:
          type: string
          format: uri
          nullable: true
          description: Upload your CV/Resume (optional)
        transcript:
          type: string
          format: uri
          nullable: true
          description: Academic transcript (optional)
        recommendation_letter:
          type: string
          format: uri
          nullable: true
          description: Letter of recommendation (optional)
        reviewed_by:
          type: integer
          readOnly: true
          nullable: true
        reviewed_by_name:
          type: string
          readOnly: true
        review_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        review_notes:
          type: string
        start_date:
          type: string
          format: date
          readOnly: true
          nullable: true
        completion_date:
          type: string
          format: date
          readOnly: true
          nullable: true
        final_evaluation:
          type: string
        certificate_issued:
          type: boolean
        is_active:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedSummerTrainingDetail:
      type: object
      description: Serializer for summer training detail view
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        short_description:
          type: string
          description: Brief description for program listings
          maxLength: 300
        program_code:
          type: string
          description: Unique program identifier (e.g., ST2024-01)
          maxLength: 20
        duration_weeks:
          type: integer
          maximum: 16
          minimum: 1
          description: Program duration in weeks
        hours_per_week:
          type: integer
          maximum: 60
          minimum: 10
          description: Training hours per week
        total_hours:
          type: string
          readOnly: true
        difficulty_level:
          $ref: '#/components/schemas/DifficultyLevelEnum'
        supervisor:
          type: integer
          nullable: true
        supervisor_name:
          type: string
          readOnly: true
        department:
          type: integer
          nullable: true
        department_name:
          type: string
          readOnly: true
        lab:
          type: integer
          nullable: true
        lab_name:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        application_deadline:
          type: string
          format: date
        max_trainees:
          type: integer
        min_trainees:
          type: integer
        current_enrollment:
          type: integer
        applications_count:
          type: string
          readOnly: true
        academic_requirements:
          type: string
          description: Academic requirements (e.g., minimum GPA, year of study)
        skills_requirements:
          type: string
          description: Required skills and knowledge
        learning_objectives:
          type: string
          description: What trainees will learn and achieve
        project_description:
          type: string
          description: Description of projects trainees will work on
        is_paid:
          type: boolean
        stipend_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Monthly stipend amount
        provides_certificate:
          type: boolean
        provides_recommendation:
          type: boolean
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        is_featured:
          type: boolean
        is_public:
          type: boolean
        featured_image:
          type: string
          format: uri
          nullable: true
        program_brochure:
          type: string
          format: uri
          nullable: true
          description: Program brochure PDF
        tags:
          type: string
          description: Comma-separated tags for categorization
          maxLength: 500
        is_application_open:
          type: string
          readOnly: true
        is_full:
          type: string
          readOnly: true
        can_apply:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUser:
      type: object
      description: Serializer for User model
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          $ref: '#/components/schemas/RoleEnum'
        is_approved:
          type: boolean
          readOnly: true
        approval_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        phone:
          type: string
          maxLength: 20
        institution:
          type: string
          maxLength: 200
        department:
          type: string
          maxLength: 200
        date_joined:
          type: string
          format: date-time
          readOnly: true
        profile:
          allOf:
          - $ref: '#/components/schemas/UserProfile'
          readOnly: true
        password:
          type: string
          writeOnly: true
        password_confirm:
          type: string
          writeOnly: true
    PatchedUserApproval:
      type: object
      description: Serializer for user approval by admin
      properties:
        is_approved:
          type: boolean
    PatchedUserProfile:
      type: object
      description: Serializer for UserProfile model
      properties:
        orcid_id:
          type: string
          description: ORCID ID (e.g., 0000-0000-0000-0000)
          maxLength: 19
        bio:
          type: string
          maxLength: 1000
        research_interests:
          type: string
          maxLength: 500
        cv_file:
          type: string
          format: uri
          description: Upload CV (PDF, DOC, DOCX only)
          pattern: (?:pdf|doc|docx)$
        website:
          type: string
          format: uri
          maxLength: 200
        linkedin:
          type: string
          format: uri
          maxLength: 200
        google_scholar:
          type: string
          format: uri
          maxLength: 200
        researchgate:
          type: string
          format: uri
          maxLength: 200
        is_public:
          type: boolean
          description: Make profile visible to public
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PaymentStatusEnum:
      enum:
      - pending
      - paid
      - failed
      - refunded
      type: string
      description: |-
        * `pending` - Pending
        * `paid` - Paid
        * `failed` - Failed
        * `refunded` - Refunded
    PostApproval:
      type: object
      description: Serializer for post approval
      properties:
        status:
          $ref: '#/components/schemas/Status3a6Enum'
    PostCreateUpdate:
      type: object
      description: Serializer for creating and updating posts
      properties:
        title:
          type: string
          maxLength: 200
        content:
          type: string
          description: Main post content
        excerpt:
          type: string
          description: Brief excerpt for list views (auto-generated if empty)
          maxLength: 300
        category:
          $ref: '#/components/schemas/CategoryEnum'
        tags:
          type: string
          description: Comma-separated tags for categorization
          maxLength: 200
        event_date:
          type: string
          format: date-time
          nullable: true
          description: Date and time for events (optional)
        event_location:
          type: string
          description: Location for events (optional)
          maxLength: 200
        registration_required:
          type: boolean
          description: Whether registration is required for this event
        registration_deadline:
          type: string
          format: date-time
          nullable: true
          description: Registration deadline (if applicable)
        max_participants:
          type: integer
          nullable: true
          description: Maximum number of participants (optional)
        is_featured:
          type: boolean
          description: Feature on homepage
        is_public:
          type: boolean
          description: Visible to public (non-authenticated users)
        publish_at:
          type: string
          format: date-time
          description: When to publish the post
        featured_image:
          type: string
          format: uri
          description: Featured image for the post
        attachment:
          type: string
          format: uri
          description: Optional attachment (PDF, DOC, DOCX, JPG, PNG)
          pattern: (?:pdf|doc|docx|jpg|jpeg|png)$
      required:
      - content
      - title
    PostDetail:
      type: object
      description: Serializer for post detail view
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        content:
          type: string
          description: Main post content
        excerpt:
          type: string
          description: Brief excerpt for list views (auto-generated if empty)
          maxLength: 300
        category:
          $ref: '#/components/schemas/CategoryEnum'
        tags:
          type: string
          description: Comma-separated tags for categorization
          maxLength: 200
        tags_list:
          type: array
          items: {}
          readOnly: true
        event_date:
          type: string
          format: date-time
          nullable: true
          description: Date and time for events (optional)
        event_location:
          type: string
          description: Location for events (optional)
          maxLength: 200
        registration_required:
          type: boolean
          description: Whether registration is required for this event
        registration_deadline:
          type: string
          format: date-time
          nullable: true
          description: Registration deadline (if applicable)
        max_participants:
          type: integer
          nullable: true
          description: Maximum number of participants (optional)
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        is_featured:
          type: boolean
          description: Feature on homepage
        is_public:
          type: boolean
          description: Visible to public (non-authenticated users)
        publish_at:
          type: string
          format: date-time
          description: When to publish the post
        author:
          allOf:
          - $ref: '#/components/schemas/Author'
          readOnly: true
        approved_by:
          allOf:
          - $ref: '#/components/schemas/Author'
          readOnly: true
        approved_at:
          type: string
          format: date-time
          nullable: true
        featured_image:
          type: string
          format: uri
          description: Featured image for the post
        attachment:
          type: string
          format: uri
          description: Optional attachment (PDF, DOC, DOCX, JPG, PNG)
          pattern: (?:pdf|doc|docx|jpg|jpeg|png)$
        view_count:
          type: integer
        is_published:
          type: boolean
          readOnly: true
        is_event:
          type: boolean
          readOnly: true
        is_upcoming_event:
          type: boolean
          readOnly: true
        is_past_event:
          type: boolean
          readOnly: true
        registration_open:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - approved_by
      - author
      - content
      - created_at
      - id
      - is_event
      - is_past_event
      - is_published
      - is_upcoming_event
      - registration_open
      - tags_list
      - title
      - updated_at
    PostList:
      type: object
      description: Serializer for post list view
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        excerpt:
          type: string
          description: Brief excerpt for list views (auto-generated if empty)
          maxLength: 300
        category:
          $ref: '#/components/schemas/CategoryEnum'
        tags_list:
          type: array
          items: {}
          readOnly: true
        event_date:
          type: string
          format: date-time
          nullable: true
          description: Date and time for events (optional)
        event_location:
          type: string
          description: Location for events (optional)
          maxLength: 200
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        is_featured:
          type: boolean
          description: Feature on homepage
        is_public:
          type: boolean
          description: Visible to public (non-authenticated users)
        publish_at:
          type: string
          format: date-time
          description: When to publish the post
        author:
          allOf:
          - $ref: '#/components/schemas/Author'
          readOnly: true
        featured_image:
          type: string
          format: uri
          description: Featured image for the post
        view_count:
          type: integer
        is_published:
          type: boolean
          readOnly: true
        is_event:
          type: boolean
          readOnly: true
        is_upcoming_event:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - author
      - created_at
      - id
      - is_event
      - is_published
      - is_upcoming_event
      - tags_list
      - title
    PriorityEnum:
      enum:
      - low
      - medium
      - high
      - urgent
      type: string
      description: |-
        * `low` - Low
        * `medium` - Medium
        * `high` - High
        * `urgent` - Urgent
    PublicServiceDetail:
      type: object
      description: Serializer for public service detail view
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        short_description:
          type: string
          description: Brief description for service listings
          maxLength: 300
        service_code:
          type: string
          description: Unique service identifier (e.g., PS2024-01)
          maxLength: 20
        service_category:
          $ref: '#/components/schemas/ServiceCategoryEnum'
        coordinator:
          type: integer
          nullable: true
        coordinator_name:
          type: string
          readOnly: true
        department:
          type: integer
          nullable: true
        department_name:
          type: string
          readOnly: true
        is_ongoing:
          type: boolean
          description: Whether this service is continuously available
        start_date:
          type: string
          format: date
          nullable: true
          description: Start date for time-limited services
        end_date:
          type: string
          format: date
          nullable: true
          description: End date for time-limited services
        max_concurrent_requests:
          type: integer
          description: Maximum number of concurrent service requests
        current_requests:
          type: integer
        requests_count:
          type: string
          readOnly: true
        is_free:
          type: boolean
        base_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Base service price
        pricing_details:
          type: string
          description: Detailed pricing information and structure
        eligibility_criteria:
          type: string
          description: Who can access this service
        required_documents:
          type: string
          description: Documents required for service request
        process_description:
          type: string
          description: How to request and receive this service
        estimated_turnaround:
          type: string
          description: Estimated time to complete service (e.g., '2-3 business days')
          maxLength: 100
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        is_featured:
          type: boolean
        is_public:
          type: boolean
        contact_email:
          type: string
          format: email
          maxLength: 254
        contact_phone:
          type: string
          maxLength: 20
        location:
          type: string
          description: Physical location where service is provided
          maxLength: 200
        featured_image:
          type: string
          format: uri
          nullable: true
        service_brochure:
          type: string
          format: uri
          nullable: true
          description: Service information brochure
        tags:
          type: string
          description: Comma-separated tags for categorization
          maxLength: 500
        is_available:
          type: string
          readOnly: true
        is_at_capacity:
          type: string
          readOnly: true
        can_request:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - can_request
      - coordinator_name
      - created_at
      - department_name
      - description
      - id
      - is_at_capacity
      - is_available
      - process_description
      - requests_count
      - service_code
      - title
      - updated_at
    PublicServiceList:
      type: object
      description: Serializer for public service list view
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        short_description:
          type: string
          description: Brief description for service listings
          maxLength: 300
        service_code:
          type: string
          description: Unique service identifier (e.g., PS2024-01)
          maxLength: 20
        service_category:
          $ref: '#/components/schemas/ServiceCategoryEnum'
        coordinator_name:
          type: string
          readOnly: true
        department_name:
          type: string
          readOnly: true
        is_ongoing:
          type: boolean
          description: Whether this service is continuously available
        start_date:
          type: string
          format: date
          nullable: true
          description: Start date for time-limited services
        end_date:
          type: string
          format: date
          nullable: true
          description: End date for time-limited services
        max_concurrent_requests:
          type: integer
          description: Maximum number of concurrent service requests
        current_requests:
          type: integer
        is_free:
          type: boolean
        base_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Base service price
        estimated_turnaround:
          type: string
          description: Estimated time to complete service (e.g., '2-3 business days')
          maxLength: 100
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        is_featured:
          type: boolean
        featured_image:
          type: string
          format: uri
          nullable: true
        contact_email:
          type: string
          format: email
          maxLength: 254
        contact_phone:
          type: string
          maxLength: 20
        location:
          type: string
          description: Physical location where service is provided
          maxLength: 200
        is_available:
          type: string
          readOnly: true
        is_at_capacity:
          type: string
          readOnly: true
        can_request:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - can_request
      - coordinator_name
      - created_at
      - department_name
      - id
      - is_at_capacity
      - is_available
      - service_code
      - title
    PublicServiceRequest:
      type: object
      description: Serializer for public service requests
      properties:
        id:
          type: integer
          readOnly: true
        service:
          type: integer
          readOnly: true
        service_title:
          type: string
          readOnly: true
        service_code:
          type: string
          readOnly: true
        requester:
          type: integer
          readOnly: true
        requester_name:
          type: string
          readOnly: true
        request_date:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/PublicServiceRequestStatusEnum'
        request_description:
          type: string
          description: Detailed description of what you need
        urgency_level:
          $ref: '#/components/schemas/UrgencyLevelEnum'
        preferred_date:
          type: string
          format: date
          nullable: true
          description: Preferred date for service delivery
        contact_person:
          type: string
          description: Primary contact person for this request
          maxLength: 100
        contact_email:
          type: string
          format: email
          maxLength: 254
        contact_phone:
          type: string
          maxLength: 20
        organization:
          type: string
          description: Organization or institution making the request
          maxLength: 200
        supporting_documents:
          type: string
          format: uri
          nullable: true
          description: Supporting documents for the request
        assigned_to:
          type: integer
          readOnly: true
          nullable: true
        assigned_to_name:
          type: string
          readOnly: true
        estimated_completion:
          type: string
          format: date
          readOnly: true
          nullable: true
        actual_completion:
          type: string
          format: date
          readOnly: true
          nullable: true
        payment_required:
          type: boolean
        payment_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        payment_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        service_notes:
          type: string
          description: Internal notes about service delivery
        results_summary:
          type: string
          description: Summary of service results
        client_feedback:
          type: string
          description: Client feedback about the service
        satisfaction_rating:
          type: integer
          maximum: 5
          minimum: 1
          nullable: true
          description: Client satisfaction rating (1-5)
        is_active:
          type: string
          readOnly: true
        is_overdue:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - actual_completion
      - assigned_to
      - assigned_to_name
      - contact_email
      - contact_person
      - created_at
      - estimated_completion
      - id
      - is_active
      - is_overdue
      - payment_date
      - request_date
      - request_description
      - requester
      - requester_name
      - service
      - service_code
      - service_title
      - updated_at
    PublicServiceRequestStatusEnum:
      enum:
      - submitted
      - under_review
      - approved
      - in_progress
      - completed
      - rejected
      - cancelled
      type: string
      description: |-
        * `submitted` - Submitted
        * `under_review` - Under Review
        * `approved` - Approved
        * `in_progress` - In Progress
        * `completed` - Completed
        * `rejected` - Rejected
        * `cancelled` - Cancelled
    PublicationApproval:
      type: object
      description: Serializer for publication approval workflow
      properties:
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        review_notes:
          type: string
          description: Admin notes about the review
        is_public:
          type: boolean
          description: Make publication visible to public
    PublicationAuthor:
      type: object
      description: Serializer for PublicationAuthor model
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: integer
        author_name:
          type: string
          readOnly: true
        author_email:
          type: string
          format: email
          readOnly: true
        author_orcid:
          type: string
          readOnly: true
        order:
          type: integer
          description: Order of author in publication (1 = first author)
        role:
          type: string
          description: Author's role in the research (e.g., Principal Investigator,
            Data Analyst)
          maxLength: 100
        affiliation_at_publication:
          type: string
          description: Author's affiliation when this publication was created
          maxLength: 300
        contribution:
          type: string
          description: Description of author's contribution to the research
        is_corresponding:
          type: boolean
          description: Is this author the corresponding author?
        is_first_author:
          type: boolean
          description: Is this the first author?
        is_last_author:
          type: boolean
          description: Is this the last/senior author?
      required:
      - author
      - author_email
      - author_name
      - author_orcid
      - id
    PublicationCreateUpdate:
      type: object
      description: Serializer for creating and updating publications
      properties:
        title:
          type: string
          maxLength: 500
        abstract:
          type: string
          maxLength: 2000
        publication_type:
          $ref: '#/components/schemas/PublicationTypeEnum'
        journal_name:
          type: string
          maxLength: 300
        conference_name:
          type: string
          maxLength: 300
        publisher:
          type: string
          maxLength: 200
        volume:
          type: string
          maxLength: 50
        issue:
          type: string
          maxLength: 50
        pages:
          type: string
          description: e.g., 123-145
          maxLength: 50
        publication_date:
          type: string
          format: date
          nullable: true
        doi:
          type: string
          description: Digital Object Identifier
          maxLength: 200
        isbn:
          type: string
          description: International Standard Book Number
          maxLength: 20
        issn:
          type: string
          description: International Standard Serial Number
          maxLength: 20
        pmid:
          type: string
          description: PubMed ID
          maxLength: 20
        url:
          type: string
          format: uri
          description: Link to publication
          maxLength: 200
        pdf_url:
          type: string
          format: uri
          description: Direct link to PDF
          maxLength: 200
        document_file:
          type: string
          format: uri
          description: Upload publication document (PDF, DOC, DOCX only)
          pattern: (?:pdf|doc|docx)$
        keywords:
          type: string
          description: Comma-separated keywords
        research_area:
          type: string
          maxLength: 200
        corresponding_author:
          type: integer
          nullable: true
          description: Main contact author for this publication
        is_public:
          type: boolean
          description: Make publication visible to public
        citation_count:
          type: integer
        authors_data:
          type: array
          items:
            $ref: '#/components/schemas/PublicationAuthor'
          writeOnly: true
      required:
      - title
    PublicationDetail:
      type: object
      description: Detailed serializer for publication detail views
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 500
        abstract:
          type: string
          maxLength: 2000
        publication_type:
          $ref: '#/components/schemas/PublicationTypeEnum'
        journal_name:
          type: string
          maxLength: 300
        conference_name:
          type: string
          maxLength: 300
        publisher:
          type: string
          maxLength: 200
        volume:
          type: string
          maxLength: 50
        issue:
          type: string
          maxLength: 50
        pages:
          type: string
          description: e.g., 123-145
          maxLength: 50
        publication_date:
          type: string
          format: date
          nullable: true
        doi:
          type: string
          description: Digital Object Identifier
          maxLength: 200
        isbn:
          type: string
          description: International Standard Book Number
          maxLength: 20
        issn:
          type: string
          description: International Standard Serial Number
          maxLength: 20
        pmid:
          type: string
          description: PubMed ID
          maxLength: 20
        url:
          type: string
          format: uri
          description: Link to publication
          maxLength: 200
        pdf_url:
          type: string
          format: uri
          description: Direct link to PDF
          maxLength: 200
        document_file:
          type: string
          format: uri
          description: Upload publication document (PDF, DOC, DOCX only)
          pattern: (?:pdf|doc|docx)$
        keywords:
          type: string
          description: Comma-separated keywords
        research_area:
          type: string
          maxLength: 200
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        is_public:
          type: boolean
          description: Make publication visible to public
        citation_count:
          type: integer
        corresponding_author:
          type: integer
          nullable: true
          description: Main contact author for this publication
        corresponding_author_name:
          type: string
          readOnly: true
        submitted_by:
          type: integer
          description: User who submitted this publication
        submitted_by_name:
          type: string
          readOnly: true
        submitted_at:
          type: string
          format: date-time
          readOnly: true
        reviewed_by:
          type: integer
          nullable: true
          description: Admin who reviewed this publication
        reviewed_by_name:
          type: string
          readOnly: true
        reviewed_at:
          type: string
          format: date-time
          nullable: true
        review_notes:
          type: string
          description: Admin notes about the review
        authors:
          type: array
          items:
            $ref: '#/components/schemas/PublicationAuthor'
          readOnly: true
        metrics:
          allOf:
          - $ref: '#/components/schemas/PublicationMetrics'
          readOnly: true
        can_edit:
          type: string
          readOnly: true
        can_approve:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - authors
      - can_approve
      - can_edit
      - corresponding_author_name
      - created_at
      - id
      - metrics
      - reviewed_by_name
      - submitted_at
      - submitted_by
      - submitted_by_name
      - title
      - updated_at
    PublicationList:
      type: object
      description: Lightweight serializer for publication lists
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 500
        publication_type:
          $ref: '#/components/schemas/PublicationTypeEnum'
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        publication_date:
          type: string
          format: date
          nullable: true
        journal_name:
          type: string
          maxLength: 300
        conference_name:
          type: string
          maxLength: 300
        author_names:
          type: string
          readOnly: true
        author_count:
          type: string
          readOnly: true
        corresponding_author_name:
          type: string
          readOnly: true
        submitted_by_name:
          type: string
          readOnly: true
        is_public:
          type: boolean
          description: Make publication visible to public
        citation_count:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - author_count
      - author_names
      - corresponding_author_name
      - created_at
      - id
      - submitted_by_name
      - title
      - updated_at
    PublicationMetrics:
      type: object
      description: Serializer for PublicationMetrics model
      properties:
        view_count:
          type: integer
        download_count:
          type: integer
        citation_count:
          type: integer
        altmetric_score:
          type: number
          format: double
          nullable: true
        twitter_mentions:
          type: integer
        facebook_shares:
          type: integer
        linkedin_shares:
          type: integer
        mendeley_readers:
          type: integer
        researchgate_reads:
          type: integer
        total_engagement:
          type: string
          readOnly: true
        last_citation_update:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        last_altmetric_update:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - last_altmetric_update
      - last_citation_update
      - total_engagement
    PublicationTypeEnum:
      enum:
      - journal_article
      - conference_paper
      - book_chapter
      - book
      - thesis
      - report
      - preprint
      - other
      type: string
      description: |-
        * `journal_article` - Journal Article
        * `conference_paper` - Conference Paper
        * `book_chapter` - Book Chapter
        * `book` - Book
        * `thesis` - Thesis
        * `report` - Report
        * `preprint` - Preprint
        * `other` - Other
    ResearcherAssignment:
      type: object
      description: Serializer for researcher assignments
      properties:
        id:
          type: integer
          readOnly: true
        researcher:
          allOf:
          - $ref: '#/components/schemas/UserList'
          readOnly: true
        researcher_id:
          type: integer
          writeOnly: true
        lab:
          allOf:
          - $ref: '#/components/schemas/LabList'
          readOnly: true
        lab_id:
          type: integer
          writeOnly: true
        department:
          allOf:
          - $ref: '#/components/schemas/DepartmentList'
          readOnly: true
        department_id:
          type: integer
          writeOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        position:
          type: string
          description: Position/role in the lab (e.g., PhD Student, Postdoc, Research
            Assistant)
          maxLength: 100
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        assigned_by:
          allOf:
          - $ref: '#/components/schemas/UserList'
          readOnly: true
        notes:
          type: string
          description: Additional notes about the assignment
        duration_days:
          type: string
          readOnly: true
        is_active:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - assigned_by
      - created_at
      - department
      - department_id
      - duration_days
      - id
      - is_active
      - lab
      - lab_id
      - researcher
      - researcher_id
      - start_date
      - updated_at
    ResearcherAssignmentList:
      type: object
      description: Simplified serializer for assignment lists
      properties:
        id:
          type: integer
          readOnly: true
        researcher_name:
          type: string
          readOnly: true
        lab_name:
          type: string
          readOnly: true
        department_name:
          type: string
          readOnly: true
        position:
          type: string
          description: Position/role in the lab (e.g., PhD Student, Postdoc, Research
            Assistant)
          maxLength: 100
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        is_active:
          type: string
          readOnly: true
      required:
      - department_name
      - id
      - is_active
      - lab_name
      - researcher_name
      - start_date
    RoleEnum:
      enum:
      - admin
      - moderator
      - researcher
      type: string
      description: |-
        * `admin` - Admin
        * `moderator` - Moderator
        * `researcher` - Researcher
    ServiceCategoryEnum:
      enum:
      - consultation
      - testing
      - training
      - research
      - equipment
      - other
      type: string
      description: |-
        * `consultation` - Consultation
        * `testing` - Testing & Analysis
        * `training` - Training & Workshops
        * `research` - Research Collaboration
        * `equipment` - Equipment Access
        * `other` - Other Services
    Status3a6Enum:
      enum:
      - pending
      - approved
      - rejected
      - active
      - inactive
      - draft
      - published
      type: string
      description: |-
        * `pending` - Pending
        * `approved` - Approved
        * `rejected` - Rejected
        * `active` - Active
        * `inactive` - Inactive
        * `draft` - Draft
        * `published` - Published
    SummerTrainingApplication:
      type: object
      description: Serializer for summer training applications
      properties:
        id:
          type: integer
          readOnly: true
        program:
          type: integer
          readOnly: true
        program_title:
          type: string
          readOnly: true
        program_code:
          type: string
          readOnly: true
        applicant:
          type: integer
          readOnly: true
        applicant_name:
          type: string
          readOnly: true
        application_date:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/SummerTrainingApplicationStatusEnum'
        university:
          type: string
          maxLength: 200
        major:
          type: string
          maxLength: 100
        year_of_study:
          $ref: '#/components/schemas/YearOfStudyEnum'
        gpa:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        motivation_letter:
          type: string
          description: Why do you want to join this program?
        relevant_experience:
          type: string
          description: Relevant academic or professional experience
        skills_and_interests:
          type: string
          description: Technical skills and research interests
        cv_file:
          type: string
          format: uri
          nullable: true
          description: Upload your CV/Resume (optional)
        transcript:
          type: string
          format: uri
          nullable: true
          description: Academic transcript (optional)
        recommendation_letter:
          type: string
          format: uri
          nullable: true
          description: Letter of recommendation (optional)
        reviewed_by:
          type: integer
          readOnly: true
          nullable: true
        reviewed_by_name:
          type: string
          readOnly: true
        review_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        review_notes:
          type: string
        start_date:
          type: string
          format: date
          readOnly: true
          nullable: true
        completion_date:
          type: string
          format: date
          readOnly: true
          nullable: true
        final_evaluation:
          type: string
        certificate_issued:
          type: boolean
        is_active:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - applicant
      - applicant_name
      - application_date
      - completion_date
      - created_at
      - gpa
      - id
      - is_active
      - major
      - motivation_letter
      - program
      - program_code
      - program_title
      - review_date
      - reviewed_by
      - reviewed_by_name
      - skills_and_interests
      - start_date
      - university
      - updated_at
      - year_of_study
    SummerTrainingApplicationStatusEnum:
      enum:
      - submitted
      - under_review
      - approved
      - rejected
      - completed
      - withdrawn
      type: string
      description: |-
        * `submitted` - Submitted
        * `under_review` - Under Review
        * `approved` - Approved
        * `rejected` - Rejected
        * `completed` - Completed
        * `withdrawn` - Withdrawn
    SummerTrainingDetail:
      type: object
      description: Serializer for summer training detail view
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        short_description:
          type: string
          description: Brief description for program listings
          maxLength: 300
        program_code:
          type: string
          description: Unique program identifier (e.g., ST2024-01)
          maxLength: 20
        duration_weeks:
          type: integer
          maximum: 16
          minimum: 1
          description: Program duration in weeks
        hours_per_week:
          type: integer
          maximum: 60
          minimum: 10
          description: Training hours per week
        total_hours:
          type: string
          readOnly: true
        difficulty_level:
          $ref: '#/components/schemas/DifficultyLevelEnum'
        supervisor:
          type: integer
          nullable: true
        supervisor_name:
          type: string
          readOnly: true
        department:
          type: integer
          nullable: true
        department_name:
          type: string
          readOnly: true
        lab:
          type: integer
          nullable: true
        lab_name:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        application_deadline:
          type: string
          format: date
        max_trainees:
          type: integer
        min_trainees:
          type: integer
        current_enrollment:
          type: integer
        applications_count:
          type: string
          readOnly: true
        academic_requirements:
          type: string
          description: Academic requirements (e.g., minimum GPA, year of study)
        skills_requirements:
          type: string
          description: Required skills and knowledge
        learning_objectives:
          type: string
          description: What trainees will learn and achieve
        project_description:
          type: string
          description: Description of projects trainees will work on
        is_paid:
          type: boolean
        stipend_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Monthly stipend amount
        provides_certificate:
          type: boolean
        provides_recommendation:
          type: boolean
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        is_featured:
          type: boolean
        is_public:
          type: boolean
        featured_image:
          type: string
          format: uri
          nullable: true
        program_brochure:
          type: string
          format: uri
          nullable: true
          description: Program brochure PDF
        tags:
          type: string
          description: Comma-separated tags for categorization
          maxLength: 500
        is_application_open:
          type: string
          readOnly: true
        is_full:
          type: string
          readOnly: true
        can_apply:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - academic_requirements
      - application_deadline
      - applications_count
      - can_apply
      - created_at
      - department_name
      - description
      - end_date
      - id
      - is_application_open
      - is_full
      - lab_name
      - learning_objectives
      - program_code
      - start_date
      - supervisor_name
      - title
      - total_hours
      - updated_at
    SummerTrainingList:
      type: object
      description: Serializer for summer training list view
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        short_description:
          type: string
          description: Brief description for program listings
          maxLength: 300
        program_code:
          type: string
          description: Unique program identifier (e.g., ST2024-01)
          maxLength: 20
        duration_weeks:
          type: integer
          maximum: 16
          minimum: 1
          description: Program duration in weeks
        hours_per_week:
          type: integer
          maximum: 60
          minimum: 10
          description: Training hours per week
        total_hours:
          type: string
          readOnly: true
        difficulty_level:
          $ref: '#/components/schemas/DifficultyLevelEnum'
        supervisor_name:
          type: string
          readOnly: true
        department_name:
          type: string
          readOnly: true
        lab_name:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        application_deadline:
          type: string
          format: date
        max_trainees:
          type: integer
        current_enrollment:
          type: integer
        is_paid:
          type: boolean
        stipend_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Monthly stipend amount
        provides_certificate:
          type: boolean
        status:
          $ref: '#/components/schemas/Status3a6Enum'
        is_featured:
          type: boolean
        featured_image:
          type: string
          format: uri
          nullable: true
        is_application_open:
          type: string
          readOnly: true
        is_full:
          type: string
          readOnly: true
        can_apply:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - application_deadline
      - can_apply
      - created_at
      - department_name
      - end_date
      - id
      - is_application_open
      - is_full
      - lab_name
      - program_code
      - start_date
      - supervisor_name
      - title
      - total_hours
    TargetAudienceEnum:
      enum:
      - all
      - researchers
      - moderators
      - admins
      - approved
      type: string
      description: |-
        * `all` - All Users
        * `researchers` - Researchers Only
        * `moderators` - Moderators Only
        * `admins` - Admins Only
        * `approved` - Approved Users Only
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TrainingTypeEnum:
      enum:
      - course
      - summer_training
      - public_service
      - workshop
      - seminar
      type: string
      description: |-
        * `course` - Course
        * `summer_training` - Summer Training
        * `public_service` - Public Service
        * `workshop` - Workshop
        * `seminar` - Seminar
    UrgencyLevelEnum:
      enum:
      - low
      - medium
      - high
      - urgent
      type: string
      description: |-
        * `low` - Low
        * `medium` - Medium
        * `high` - High
        * `urgent` - Urgent
    User:
      type: object
      description: Serializer for User model
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          $ref: '#/components/schemas/RoleEnum'
        is_approved:
          type: boolean
          readOnly: true
        approval_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        phone:
          type: string
          maxLength: 20
        institution:
          type: string
          maxLength: 200
        department:
          type: string
          maxLength: 200
        date_joined:
          type: string
          format: date-time
          readOnly: true
        profile:
          allOf:
          - $ref: '#/components/schemas/UserProfile'
          readOnly: true
        password:
          type: string
          writeOnly: true
        password_confirm:
          type: string
          writeOnly: true
      required:
      - approval_date
      - date_joined
      - email
      - id
      - is_approved
      - password
      - password_confirm
      - profile
      - username
    UserApproval:
      type: object
      description: Serializer for user approval by admin
      properties:
        is_approved:
          type: boolean
    UserList:
      type: object
      description: Simplified serializer for user lists
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        full_name:
          type: string
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
        is_approved:
          type: boolean
        date_joined:
          type: string
          format: date-time
        institution:
          type: string
          maxLength: 200
      required:
      - email
      - full_name
      - id
      - username
    UserProfile:
      type: object
      description: Serializer for UserProfile model
      properties:
        orcid_id:
          type: string
          description: ORCID ID (e.g., 0000-0000-0000-0000)
          maxLength: 19
        bio:
          type: string
          maxLength: 1000
        research_interests:
          type: string
          maxLength: 500
        cv_file:
          type: string
          format: uri
          description: Upload CV (PDF, DOC, DOCX only)
          pattern: (?:pdf|doc|docx)$
        website:
          type: string
          format: uri
          maxLength: 200
        linkedin:
          type: string
          format: uri
          maxLength: 200
        google_scholar:
          type: string
          format: uri
          maxLength: 200
        researchgate:
          type: string
          format: uri
          maxLength: 200
        is_public:
          type: boolean
          description: Make profile visible to public
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - updated_at
    UserRegistration:
      type: object
      description: Serializer for user registration
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
        password_confirm:
          type: string
          writeOnly: true
        phone:
          type: string
          maxLength: 20
        institution:
          type: string
          maxLength: 200
        department:
          type: string
          maxLength: 200
      required:
      - email
      - password
      - password_confirm
      - username
    YearOfStudyEnum:
      enum:
      - freshman
      - sophomore
      - junior
      - senior
      - graduate
      type: string
      description: |-
        * `freshman` - Freshman
        * `sophomore` - Sophomore
        * `junior` - Junior
        * `senior` - Senior
        * `graduate` - Graduate
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
